#BlueJ class context
comment0.target=Karte
comment0.text=\r\n\ Die\ Karte\ des\ Spiels\r\n\r\n\ @author\ Lina\ &\ Strawberry\r\n\ @version\ 0.0.1\r\n
comment1.params=
comment1.target=Karte()
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ die\ Karte\r\n
comment10.params=xp\ yp
comment10.target=void\ removeObject(int,\ int)
comment10.text=\r\n\ Entferne\ das\ objekt\ bei\ (xp,\ yp)\r\n\ @param\ xp\ Die\ X-Koordinate\ des\ zu\ l\u00F6schenden\ Objektes\r\n\ @param\ yp\ Die\ Y-Koordinate\ des\ zu\ l\u00F6schenden\ Objektes\r\n\ @throws\ Exception\ Falls\ ein\ nicht\ existierendes\ Objekt\ gel\u00F6scht\ wird,\ wird\ eine\ Exception\ geworfen\r\n
comment2.params=x_size\ y_size
comment2.target=void\ init_board(int,\ int)
comment2.text=\r\n\ Initialisiere\ das\ Board\ mit\ null\ Werten\ und\ baue\ den\ Rand\ auf\r\n\ @param\ x_size\ Die\ X-Gr\u00F6\u00DFe\ des\ Boards\r\n\ @param\ y_size\ Die\ Y-Gr\u00F6\u00DFe\ des\ Boards\r\n
comment3.params=id
comment3.target=Panzer[]\ KarteLaden(int)
comment3.text=\r\n\ Lade\ eine\ bestimmte\ Karte\r\n\ @param\ id\ Die\ id\ der\ Karte,\ die\ geladen\ werden\ soll\r\n\ @return\ Die\ Panzer,\ die\ sich\ auf\ der\ Karte\ befinden\r\n
comment4.params=
comment4.target=void\ verifyBord()
comment4.text=\r\n\ Verifiziere,\ dass\ die\ Koordinaten\ der\ Objekte,\ mit\ den\ Koordinaten\ in\ objekte\ \u00FCbereinstimmt.\r\n
comment5.params=xp\ yp
comment5.target=Feldobjekt\ getPos(int,\ int)
comment5.text=\r\n\ Bekomme\ das\ Objekt\ an\ den\ Koordinaten\ xp,\ yp\r\n\ @param\ xp\ Die\ X-Position\ des\ Objektes\r\n\ @param\ yp\ Die\ Y-Position\ des\ Objektes\r\n\ @return\ Das\ Objekt\ an\ den\ Koordinaten\ (xp,\ yp)\r\n
comment6.params=xp\ yp\ obj
comment6.target=void\ setPos(int,\ int,\ Feldobjekt)
comment6.text=\r\n\ Setze\ das\ Objekt\ an\ den\ Koordinaten\ (xp,\ yp)\r\n\ @param\ xp\ Die\ X-Position\ f\u00FCr\ das\ Objekt\r\n\ @param\ yp\ Die\ Y-Position\ f\u00FCr\ das\ Objekt\r\n\ @param\ obj\ Das\ Objekt,\ das\ eingesetzt\ wird\r\n
comment7.params=xp\ yp
comment7.target=boolean\ zugcheck(int,\ int)
comment7.text=\r\n\ Kontrolliere,\ ob\ ein\ zug\ zu\ (xp,\ yp)\ legal\ w\u00E4hre\r\n\ @param\ xp\ Die\ X-Position\ f\u00FCr\ den\ Zug\r\n\ @param\ yp\ Die\ Y-Position\ f\u00FCr\ den\ Zug\r\n\ @return\ Ist\ der\ Zug\ valide?\r\n
comment8.params=
comment8.target=void\ ausgabe()
comment8.text=\r\n\ Gebe\ das\ aktuelle\ Spielfeld\ auf\ die\ Konsole\ aus.\r\n
comment9.params=from_xp\ from_yp\ to_xp\ to_yp
comment9.target=void\ moveObject(int,\ int,\ int,\ int)
comment9.text=\r\n\ Bewege\ ein\ Objekt\ von\ (from_xp,\ from_yp)\ nach\ (to_xp,\ to_yp).\r\n\ @param\ from_xp\ Die\ X-Koordinate\ von\ der\ das\ Objekt\ bewegt\ werden\ soll\r\n\ @param\ from_yp\ Die\ Y-Koordinate\ von\ der\ das\ Objekt\ bewegt\ werden\ soll\r\n\ @param\ to_xp\ Die\ X-Koordinate\ auf\ die\ das\ Objekt\ bewegt\ werden\ soll\r\n\ @param\ to_yp\ Die\ Y-Koordinate\ auf\ die\ das\ Objekt\ bewegt\ werden\ soll\r\n\ @throws\ Exception\ Falls\ ein\ Invalider\ Zug\ gemacht\ wird,\ wird\ eine\ Exception\ geworfen\r\n
numComments=11
